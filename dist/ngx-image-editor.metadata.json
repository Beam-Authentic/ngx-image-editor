{"__symbolic":"module","version":3,"metadata":{"NgxImageEditorModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule"},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule"},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule"},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"NoopAnimationsModule"},{"__symbolic":"reference","module":"@angular/flex-layout","name":"FlexLayoutModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdButtonModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdIconModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdDialogModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdInputModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdMenuModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdProgressSpinnerModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdTabsModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdTooltipModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdButtonToggleModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdSliderModule"},{"__symbolic":"reference","module":"@angular/material","name":"MdAutocompleteModule"}],"declarations":[{"__symbolic":"reference","name":"NgxImageEditorComponent"}],"exports":[{"__symbolic":"reference","name":"NgxImageEditorComponent"}],"entryComponents":[{"__symbolic":"reference","name":"NgxImageEditorComponent"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"NgxImageEditorModule"}}}}},"NgxImageEditorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-image-editor","template":"\n    <div class=\"ngx-image-editor-component\" fxLayout=\"column\" fxLayoutAlign=\"center stretch\">\n    <div md-dialog-title class=\"photo-editor-header\">\n        <md-icon>photo</md-icon>\n        <div class=\"file-name\">{{state.name}}</div>\n        <button [hidden]=\"croppedImage\" md-icon-button color=\"accent\" mdTooltip=\"Crop image\" (click)=\"handleCrop()\">\n            <md-icon>crop</md-icon>\n        </button>\n        <button md-icon-button\n                [hidden]=\"croppedImage\"\n                color=\"accent\"\n                mdTooltip=\"Center canvas\"\n                (click)=\"centerCanvas()\">\n            <md-icon>center_focus_strong</md-icon>\n        </button>\n        <button md-icon-button mdTooltip=\"Fullscreen\">\n            <md-icon>fullscreen</md-icon>\n        </button>\n        <button md-icon-button mdTooltip=\"Close\" (click)=\"dialogRef.close()\">\n            <md-icon>clear</md-icon>\n        </button>\n    </div>\n\n    <div md-dialog-content\n         #dialogCropContainer\n         class=\"dialog-crop-container\"\n         fxLayout=\"column\"\n         fxLayoutAlign=\"center center\"\n         fxFlex=\"grow\">\n        <ng-template [ngIf]=\"!croppedImage\">\n            <div\n                [style.visibility]=\"loading ? 'hidden' : 'visible'\"\n                [style.background]=\"canvasFillColor\"\n                class=\"img-container\">\n                <img #previewimg\n                     [src]=\"_sanitizer.bypassSecurityTrustUrl(previewImageURL)\">\n            </div>\n        </ng-template>\n        <ng-template [ngIf]=\"croppedImage && !loading\">\n            <div class=\"cropped-image\">\n                <img #croppedImg\n                     [ngStyle]=\"{'transform': 'scale(' + zoomIn + ')'}\"\n                     [src]=\"croppedImage\">\n            </div>\n        </ng-template>\n        <md-progress-spinner *ngIf=\"loading\" mode=\"indeterminate\"></md-progress-spinner>\n    </div>\n\n    <div\n        class=\"dialog-button-actions\"\n        md-dialog-actions\n        fxLayout=\"column\"\n        align=\"start\"\n        fxFlex=\"nogrow\">\n\n        <div class=\"image-detail-toolbar\" fxFlex=\"100\">\n            <div class=\"image-dimensions\"><b>Width:</b> {{imageWidth}}px <b>Height:</b> {{imageHeight}}px</div>\n            <span fxFlex></span>\n            <div class=\"image-zoom\">\n                <button md-icon-button color=\"accent\" (click)=\"zoomChange(0.1, 'zoomIn')\">\n                    <md-icon>zoom_in</md-icon>\n                </button>\n                <md-slider [value]=\"sliderValue\" (input)=\"zoomChange($event.value)\" [thumb-label]=\"true\"></md-slider>\n                <button md-icon-button color=\"accent\" (click)=\"zoomChange(-0.1, 'zoomOut')\">\n                    <md-icon>zoom_out</md-icon>\n                </button>\n            </div>\n        </div>\n        <div class=\"cropped-image-buttons\" [style.visibility]=\"!croppedImage ? 'hidden' : 'visible'\">\n            <button md-raised-button color=\"accent\" (click)=\"saveImage()\">\n                <md-icon>done</md-icon>\n                <span>Save</span>\n            </button>\n            <button md-raised-button color=\"accent\" (click)=\"undoCrop()\">\n                <md-icon>undo</md-icon>\n                <span>Undo</span>\n            </button>\n        </div>\n        <div fxLayout=\"row\" [style.visibility]=\"croppedImage ? 'hidden' : 'visible'\">\n            <md-button-toggle-group\n                #dragMode=\"mdButtonToggleGroup\"\n                (change)=\"cropper.setDragMode($event.value)\"\n                value=\"move\">\n                <md-button-toggle value=\"move\" mdTooltip=\"Move mode\">\n                    <md-icon>open_with</md-icon>\n                </md-button-toggle>\n                <md-button-toggle value=\"crop\" mdTooltip=\"Crop mode\">\n                    <md-icon>crop</md-icon>\n                </md-button-toggle>\n            </md-button-toggle-group>\n\n            <md-button-toggle-group\n                #selectRatio=\"mdButtonToggleGroup\"\n                (change)=\"setRatio($event.value)\"\n                value=\"{{ratios[0].value}}\">\n                <md-button-toggle *ngFor=\"let ratio of ratios\" value=\"{{ratio.value}}\" mdTooltip=\"Aspect ratio\">\n                    {{ratio.text}}\n                </md-button-toggle>\n            </md-button-toggle-group>\n\n        </div>\n        <div\n            class=\"canvas-config\"\n            fxLayout=\"row\"\n            fxLayoutAlign=\"start space-between\"\n            fxLayoutGap=\"10px\"\n            [style.visibility]=\"croppedImage ? 'hidden' : 'visible'\">\n\n            <md-input-container color=\"accent\"  fxFlex=\"100\">\n                <input mdInput\n                       fxFlex=\"100\"\n                       id=\"imageWidth\"\n                       placeholder=\"Canvas width\"\n                       type=\"number\"\n                       (ngModelChange)=\"setImageWidth($event)\"\n                       [ngModel]=\"canvasWidth\">\n            </md-input-container>\n\n            <md-input-container color=\"accent\"  fxFlex=\"100\">\n                <input mdInput\n                       fxFlex=\"100\"\n                       id=\"imageHeight\"\n                       placeholder=\"Canvas height\"\n                       type=\"number\"\n                       (ngModelChange)=\"setImageHeight($event)\"\n                       [ngModel]=\"canvasHeight\">\n            </md-input-container>\n\n            <md-input-container color=\"accent\"  fxFlex=\"100\">\n                <input mdInput\n                       fxFlex=\"100\"\n                       id=\"cropBoxWidth\"\n                       placeholder=\"Cropbox width\"\n                       type=\"number\"\n                       (ngModelChange)=\"setCropBoxWidth($event)\"\n                       [ngModel]=\"cropBoxWidth\">\n            </md-input-container>\n\n            <md-input-container color=\"accent\"  fxFlex=\"100\">\n                <input mdInput\n                       fxFlex=\"100\"\n                       id=\"cropBoxHeight\"\n                       placeholder=\"Cropbox height\"\n                       type=\"number\"\n                       (ngModelChange)=\"setCropBoxHeight($event)\"\n                       [ngModel]=\"cropBoxHeight\">\n            </md-input-container>\n\n            <!--<md2-colorpicker [(ngModel)]=\"canvasFillColor\"  placeholder=\"Canvas color\"></md2-colorpicker>-->\n\n        </div>\n    </div>\n\n</div>\n\n","styles":["\n\n        /*\n     * Copyright (c) 2017 Connecto.AI. All rights reserved.\n     */\n        .ngx-image-editor-component .photo-editor-header {\n            display: flex;\n            justify-content: space-around;\n            align-items: center;\n            width: 100%;\n            padding: 5px 0;\n            background: #666;\n            color: #FFF;\n            z-index: 100;\n            margin: 0;\n        }\n        .ngx-image-editor-component .photo-editor-header > .mat-icon {\n            padding: 0 10px;\n        }\n        .ngx-image-editor-component .photo-editor-header > .file-name {\n            flex: 1 1 100%;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n        .ngx-image-editor-component md-progress-spinner {\n            position: absolute;\n        }\n        .ngx-image-editor-component .dialog-crop-container {\n            width: 800px;\n            height: 400px;\n            overflow: hidden;\n        }\n        .ngx-image-editor-component .cropper-bg {\n            background-image: none !important;\n        }\n        .ngx-image-editor-component .cropper-bg > .cropper-modal {\n            opacity: 1 !important;\n            background: none;\n        }\n        .ngx-image-editor-component .img-container {\n            width: 800px !important;\n            height: 400px !important;\n        }\n        .ngx-image-editor-component .cropped-image img {\n            width: auto !important;\n            height: auto !important;\n            max-width: 800px !important;\n            max-height: 400px !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions {\n            background: #666;\n            position: relative;\n            padding: 0;\n        }\n        .ngx-image-editor-component .dialog-button-actions:last-child {\n            margin: 0;\n        }\n        .ngx-image-editor-component .dialog-button-actions > DIV md-button-toggle-group {\n            margin: 20px;\n            background-color: white;\n        }\n        .ngx-image-editor-component .dialog-button-actions .cropped-image-buttons {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config {\n            padding: 5px;\n            margin: 0 20px;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config .mat-input-wrapper > .mat-input-table > .mat-input-infix {\n            color: white !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config .mat-input-placeholder.mat-empty:not(.mat-focused) {\n            color: white;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config .mat-input-underline {\n            border-color: white;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker {\n            width: 200px !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .md2-colorpicker-input {\n            border-bottom: 1px solid white !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .color-picker-selector .md2-colorpicker-input .md2-colorpicker-value {\n            color: white !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .color-picker-selector {\n            padding: 15px 0 !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .color-picker-selector .md2-colorpicker-preview {\n            top: 15px !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .input-focused {\n            color: #6ec140 !important;\n            border-bottom-width: 1.2px;\n            border-color: #6ec140 !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions > .canvas-config md2-colorpicker .input-focused .md2-colorpicker-placeholder {\n            color: #6ec140 !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar {\n            background-color: #272727;\n            color: white;\n            height: 40px;\n            line-height: 40px;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar > .image-zoom {\n            display: flex;\n            align-items: center;\n            padding: 0 10px;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar > .image-zoom .mat-slider-horizontal .mat-slider-wrapper {\n            top: 23px !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar > .image-zoom .mat-slider-horizontal .mat-slider-wrapper .mat-slider-thumb-container {\n            cursor: grab;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar > .image-zoom .mat-slider-horizontal .mat-slider-wrapper .mat-slider-thumb-container > .mat-slider-thumb {\n            background-color: #6ec140 !important;\n        }\n        .ngx-image-editor-component .dialog-button-actions .image-detail-toolbar > .image-dimensions {\n            padding: 0 10px;\n            font-size: 14px;\n            width: 200px;\n            max-width: 200px;\n        }\n\n        .mat-dialog-content {\n            margin: 0;\n            padding: 0;\n        }\n\n        .mat-dialog-container {\n            overflow: hidden !important;\n            padding: 0;\n        }\n\n\n\n\n\n\n\n\n\n\n    "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"previewImage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["previewimg"]}]}],"croppedImg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["croppedImg"]}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional"}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject"},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MD_DIALOG_DATA"}]}],null],"parameters":[{"__symbolic":"reference","name":"MdDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"any"}]},{"__symbolic":"reference","name":"any"},{"__symbolic":"reference","module":"@angular/platform-browser","name":"DomSanitizer"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"handleStateConfig":[{"__symbolic":"method"}],"convertFileToBase64":[{"__symbolic":"method"}],"addRatios":[{"__symbolic":"method"}],"handleCrop":[{"__symbolic":"method"}],"undoCrop":[{"__symbolic":"method"}],"saveImage":[{"__symbolic":"method"}],"initializeCropper":[{"__symbolic":"method"}],"setRatio":[{"__symbolic":"method"}],"zoomChange":[{"__symbolic":"method"}],"setImageWidth":[{"__symbolic":"method"}],"setImageHeight":[{"__symbolic":"method"}],"setCropBoxWidth":[{"__symbolic":"method"}],"setCropBoxHeight":[{"__symbolic":"method"}],"centerCanvas":[{"__symbolic":"method"}]}},"EditorOptions":{"__symbolic":"interface"},"NgxAspectRatio":{"__symbolic":"interface"},"RatioType":{"__symbolic":"interface"},"NGX_DEFAULT_RATIOS":[{"value":1.7777777777777777,"text":"16:9"},{"value":1.3333333333333333,"text":"4:3"},{"value":1,"text":"1:1"},{"value":0.6666666666666666,"text":"2:3"},{"value":null,"text":"Default"}]},"origins":{"NgxImageEditorModule":"./src/ngx-image-editor.module","NgxImageEditorComponent":"./src/ngx-image-editor.component","EditorOptions":"./src/ngx-image-editor.component","NgxAspectRatio":"./src/ngx-image-editor.component","RatioType":"./src/ngx-image-editor.component","NGX_DEFAULT_RATIOS":"./src/ngx-image-editor.component"},"importAs":"ngx-image-editor"}